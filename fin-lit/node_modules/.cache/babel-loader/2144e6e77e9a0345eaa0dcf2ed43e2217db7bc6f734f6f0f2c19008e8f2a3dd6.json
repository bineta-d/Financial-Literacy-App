{"ast":null,"code":"var _jsxFileName = \"/Users/binetadiatta/Downloads/FinLit2/fin-lit/src/components/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { YT_API_URL, YT_WATCH_URL } from \"../API\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext(null);\nexport const useAppContext = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppcontext must be within appContextProvider!');\n  }\n  ;\n  return context;\n};\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AppContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [videos, setVideos] = useState([]);\n\n  // Fetch video list on component mount\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        // Add additional query parameters such as q (search term) and part (required by YouTube API)\n        const response = await axios.get(`${YT_API_URL}&q=${encodeURIComponent(searchTerm)}&part=snippet&type=video&maxResults=16`);\n        console.log(\"API response\", response.data);\n        console.log(\"Items:\", response.data.items);\n        setVideos(response.data.items); // Assuming API returns 'items'\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      }\n    };\n    fetchVideos();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      videos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s2(AppContextProvider, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = AppContextProvider;\nconst VideoList = () => {\n  _s3();\n  const {\n    videos\n  } = useAppContext([]); // Access videos from context\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-list\",\n    children: videos.map((video, index) => {\n      var _video$snippet, _video$snippet2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-item title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `${YT_WATCH_URL}${video.id.videoId}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" video-item thumbnail\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.thumbnails.medium.url,\n              alt: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n_s3(VideoList, \"x55aag9kGGHFeYB8sT05SW03vDc=\", false, function () {\n  return [useAppContext];\n});\n_c2 = VideoList;\nconst Glossary = () => {\n  _s4();\n  const {\n    definitions\n  } = useContext([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"definition-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-2\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"topic-word\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"the-word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"definition\",\n          children: \": \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 8\n  }, this);\n};\n_s4(Glossary, \"mOUk2Qo4RO5i9J6j9ACaEoti8Q8=\");\n_c3 = Glossary;\nexport { AppContextProvider, VideoList };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContextProvider\");\n$RefreshReg$(_c2, \"VideoList\");\n$RefreshReg$(_c3, \"Glossary\");","map":{"version":3,"names":["axios","createContext","useContext","useEffect","useState","YT_API_URL","YT_WATCH_URL","Link","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","context","Error","AppContextProvider","children","_s2","videos","setVideos","fetchVideos","response","get","encodeURIComponent","searchTerm","console","log","data","items","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","VideoList","_s3","className","map","video","index","_video$snippet","_video$snippet2","snippet","title","to","id","videoId","src","thumbnails","medium","url","alt","_c2","Glossary","_s4","definitions","_c3","$RefreshReg$"],"sources":["/Users/binetadiatta/Downloads/FinLit2/fin-lit/src/components/context/appContext.js"],"sourcesContent":["import axios from \"axios\";\nimport { createContext, useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { YT_API_URL, YT_WATCH_URL } from \"../API\";\nimport { Link } from \"react-router-dom\";\n\n\nconst AppContext = createContext(null);\n\nexport const useAppContext = () =>{\n\n    const context = useContext(AppContext);\n    if(!context ){\n        \n        throw new Error('useAppcontext must be within appContextProvider!');\n    };\n    return context;\n};\n\nconst AppContextProvider = ({ children }) => {\n    const [videos, setVideos] = useState([]);\n\n    // Fetch video list on component mount\n    useEffect(() => {\n        const fetchVideos = async () => {\n            try {\n                // Add additional query parameters such as q (search term) and part (required by YouTube API)\n                const response = await axios.get(`${YT_API_URL}&q=${encodeURIComponent(searchTerm)}&part=snippet&type=video&maxResults=16`);\n                console.log(\"API response\", response.data);\n                console.log(\"Items:\", response.data.items);\n\n                setVideos(response.data.items); // Assuming API returns 'items'\n            } catch (error) {\n                console.error(\"Error fetching videos:\", error);\n            }\n        };\n\n        fetchVideos();\n    }, [searchTerm]);\n\n    return (\n        <AppContext.Provider value={{ videos }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nconst VideoList = () => {\n    const { videos } = useAppContext([]); // Access videos from context\n\n    return (\n            <div className=\"video-list\"> \n            {videos.map((video, index) => (\n                <div className=\"video\" key={index}>\n                    <div className=\"video-item title\">\n                        <h2>{video.snippet?.title}</h2> {/* Accessing video title */}\n                    </div>\n                    \n                    <Link to={`${YT_WATCH_URL}${video.id.videoId}`}>\n                    <div className=\" video-item thumbnail\">\n                        <img src={video.snippet?.thumbnails.medium.url} alt=\"thumbnail\"/>\n                    </div>\n                    </Link>\n\n                </div>\n\n            ))}\n        </div>\n)}\n\nconst Glossary = ()=>{\n    const {definitions} = useContext([]);\n\n    return (\n       <div className=\"definition-list\">\n        <ul className=\"list-2\">\n        <li className=\"topic-word\">\n                    <h3 className=\"the-word\"></h3>\n                    <p className=\"definition\">: </p>\n                </li>\n        </ul>\n        </div>\n    )\n}\n\nexport {AppContextProvider, VideoList};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}